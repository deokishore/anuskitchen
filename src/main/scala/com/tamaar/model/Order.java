package com.tamaar.model;// default package
// Generated Jan 17, 2016 1:12:59 PM by Hibernate Tools 3.4.0.CR1



import com.fasterxml.jackson.annotation.JsonIgnore;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import static javax.persistence.GenerationType.IDENTITY;

/**
 * Order generated by hbm2java
 */
@Entity
@Table(name = "order", catalog = "ozuygqof_tamaar")
public class Order implements java.io.Serializable {

	private Integer orderId;
	private Shipper shipper;
	private Customer customerByDeliveryCustomerId;
	private Customer customerByCustomerId;
	private Customer customerByBillingCustomerId;
	private String deliveryRequest;
	private PaymentDetails paymentDetails;
	private Date orderDate;
	private Date requiredDate;
	private Date shippedDate;
	private Set<OrderDetail> orderDetails = new HashSet(0);

	public Order() {
	}

	public Order(Shipper shipper, Customer customerByDeliveryCustomerId,
			Customer customerByCustomerId,
			Customer customerByBillingCustomerId, String deliveryRequest,
			PaymentDetails paymentDetails, Date orderDate, Date requiredDate,
			Date shippedDate, Set orderDetails) {
		this.shipper = shipper;
		this.customerByDeliveryCustomerId = customerByDeliveryCustomerId;
		this.customerByCustomerId = customerByCustomerId;
		this.customerByBillingCustomerId = customerByBillingCustomerId;
		this.deliveryRequest = deliveryRequest;
		this.paymentDetails = paymentDetails;
		this.orderDate = orderDate;
		this.requiredDate = requiredDate;
		this.shippedDate = shippedDate;
		this.orderDetails = orderDetails;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "order_id", unique = true, nullable = false)
	public Integer getOrderId() {
		return this.orderId;
	}

	public void setOrderId(Integer orderId) {
		this.orderId = orderId;
	}

	@ManyToOne(fetch = FetchType.EAGER, cascade = {CascadeType.PERSIST})
	@JoinColumn(name = "shipper_id")
	public Shipper getShipper() {
		return this.shipper;
	}

	public void setShipper(Shipper shipper) {
		this.shipper = shipper;
	}

	@ManyToOne(fetch = FetchType.EAGER, cascade = {CascadeType.ALL})
	@JoinColumn(name = "delivery_customer_id")
	public Customer getCustomerByDeliveryCustomerId() {
		return this.customerByDeliveryCustomerId;
	}

	public void setCustomerByDeliveryCustomerId(
			Customer customerByDeliveryCustomerId) {
		this.customerByDeliveryCustomerId = customerByDeliveryCustomerId;
	}

	@ManyToOne(fetch = FetchType.EAGER,cascade = {CascadeType.ALL})
	@JoinColumn(name = "customer_id")
	public Customer getCustomerByCustomerId() {
		return this.customerByCustomerId;
	}

	public void setCustomerByCustomerId(Customer customerByCustomerId) {
		this.customerByCustomerId = customerByCustomerId;
	}

	@ManyToOne(fetch = FetchType.EAGER, cascade = {CascadeType.ALL})
	@JoinColumn(name = "billing_customer_id")
	public Customer getCustomerByBillingCustomerId() {
		return this.customerByBillingCustomerId;
	}

	public void setCustomerByBillingCustomerId(
			Customer customerByBillingCustomerId) {
		this.customerByBillingCustomerId = customerByBillingCustomerId;
	}

	@Column(name = "delivery_request", length = 500)
	public String getDeliveryRequest() {
		return this.deliveryRequest;
	}

	public void setDeliveryRequest(String deliveryRequest) {
		this.deliveryRequest = deliveryRequest;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "payment_details_id")
	public PaymentDetails getPaymentDetails() {
		return this.paymentDetails;
	}

	public void setPaymentDetails(PaymentDetails paymentDetails) {
		this.paymentDetails = paymentDetails;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "order_date", length = 19)
	public Date getOrderDate() {
		return this.orderDate;
	}

	public void setOrderDate(Date orderDate) {
		this.orderDate = orderDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "required_date", length = 19)
	public Date getRequiredDate() {
		return this.requiredDate;
	}

	public void setRequiredDate(Date requiredDate) {
		this.requiredDate = requiredDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "shipped_date", length = 19)
	public Date getShippedDate() {
		return this.shippedDate;
	}

	public void setShippedDate(Date shippedDate) {
		this.shippedDate = shippedDate;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "order")
	@JsonIgnore
	public Set<OrderDetail> getOrderDetails() {
		return this.orderDetails;
	}

	public void setOrderDetails(Set<OrderDetail> orderDetails) {
		this.orderDetails = orderDetails;
	}

}
